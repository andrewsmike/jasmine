version: '3.7'

services:
  frontend:
    build:
      context: .
      dockerfile: .Dockerfile.webui
    ports:
      - "8001:3000"
    volumes:
      - "./jasmine-webui:/opt/jasmine-webui"

  database:
    image: mysql:8.0.22
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - "./config/dev/dev_database_dump.sql:/docker-entrypoint-initdb.d/dev_database_dump.sql"
      - "./config/dev/init_mysql_container_grants.sql:/docker-entrypoint-initdb.d/init_mysql_container_grants.sql"

    environment:
      MYSQL_DATABASE: "jasmine_web"
      MYSQL_USER: "jasmine_web_su"
      MYSQL_PASSWORD: "password"
      MYSQL_ROOT_PASSWORD: "root"
      TZ: "America/New_York"

    ports:
      - "3305:3306"

  worker_router:
    image: rabbitmq:3.9-management
    environment:
        - RABBITMQ_DEFAULT_USER=username
        - RABBITMQ_DEFAULT_PASS=password
    ports:
      - "5672:5672"
      - "15672:15672"

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  workers:
    build:
      context: .
      dockerfile: .Dockerfile.worker
    volumes:
      - "./jasmine-models:/opt/jasmine-models"
      - "./jasmine-sql:/opt/jasmine-sql"
      - "./jasmine-etl:/opt/jasmine-etl"
      - "./config/dev/jasmine_worker.cfg:/root/.jasmine_worker.cfg:ro"
      - "./config/dev/launch_celery.sh:/opt/launch_celery.sh"
    ports:
    - "5555:5555"
    depends_on:
      - database
      - worker_router
      - redis

  backend:
    build:
      context: .
      dockerfile: .Dockerfile.webserver
    ports:
      - "8002:8000"
    volumes:
      - "./jasmine-models:/opt/jasmine-models"
      - "./jasmine-sql:/opt/jasmine-sql"
      - "./jasmine-etl:/opt/jasmine-etl"
      - "./jasmine-webserver:/opt/jasmine-webserver"
      - "./config/dev/jasmine_webserver.cfg:/root/.jasmine_webserver.cfg:ro"
      - "./config/dev/jasmine_worker.cfg:/root/.jasmine_worker.cfg:ro"
    depends_on:
      - database
      - workers
      - redis

  nginx:
    image: nginx:stable
    volumes:
      - "./config/dev/nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "8000:80"
    depends_on:
      - frontend
      - backend
